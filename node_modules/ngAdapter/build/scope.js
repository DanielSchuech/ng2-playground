"use strict";
var Scope = (function () {
    function Scope() {
    }
    /**
     * setup scope with events, watch
     */
    Scope.setUp = function (scope, scopeEvents) {
        //setting up scope events
        scope.$on = scopeEvents.$on.bind(scopeEvents);
        scope.$broadcast = scopeEvents.$broadcast.bind(scopeEvents);
        scope.$emit = scopeEvents.$emit.bind(scopeEvents);
        //setting up scope watch
        this.addScopeWatch(scope);
    };
    /**
     * scope watch function
     * saves the listeners and equals function for later check
     */
    Scope.addScopeWatch = function (scope) {
        scope.$watch = scopeWatch;
        function scopeWatch(watchExpression, listener, objectEquality) {
            //invoke watchExpression function
            if (watchExpression instanceof Function) {
                watchExpression = watchExpression(scope);
            }
            //determine equals function
            var equals;
            if (objectEquality instanceof Function) {
                equals = objectEquality;
            }
            //save watch & equals functions
            scope._watch[watchExpression] = listener;
            scope._equals[watchExpression] = equals;
        }
    };
    /**
     * execute saved scope watch listener
     */
    Scope.executeScopeWatchListener = function (property, scope, oldVal, newVal) {
        var listener = scope._watch[property];
        if (listener) {
            listener(newVal, oldVal, scope);
        }
    };
    return Scope;
}());
exports.Scope = Scope;
//# sourceMappingURL=scope.js.map